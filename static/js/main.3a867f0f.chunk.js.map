{"version":3,"sources":["components/Header.js","services/musicsAPI.js","pages/Loading.js","components/MusicCard.js","services/favoriteSongsAPI.js","pages/Album.js","pages/Favorites.js","pages/Search.js","services/searchAlbumsAPI.js","App.jsx","index.js"],"names":["Header","className","src","process","to","React","Component","getMusics","id","a","fetch","request","json","requestJson","results","Loading","MusicCard","this","props","musics","changeFavorite","isFavorite","map","music","trackName","previewUrl","controls","kind","htmlFor","trackId","type","onChange","checked","FAVORITE_SONGS_KEY","JSON","parse","localStorage","getItem","setItem","stringify","readFavoriteSongs","saveFavoriteSongs","favoriteSongs","simulateRequest","response","callback","setTimeout","getFavoriteSongs","Promise","resolve","addSong","song","removeSong","filter","s","Album","renderMusics","setState","loading","match","params","data","addFavoriteSong","removeFavoriteSong","state","length","includes","trackID","artistName","collectionName","slice","Favorites","Search","handlechange","value","btnSearchAlbums","searchResults","renderAlbums","name","placeholder","onClick","searchAlbumsAPI","artist","artistNameURL","encodeURI","replaceAll","getAlbumsAPI","APIResponse","artistId","collectionId","collectionPrice","artworkUrl100","releaseDate","trackCount","App","handleChange","target","artistSearch","albums","console","log","albumsResult","artistSearched","album","replace","alt","path","component","render","ReactDOM","StrictMode","basename","document","getElementById"],"mappings":"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","file":"static/js/main.3a867f0f.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\n\n\nclass Header extends React.Component {\n  render() {\n    return (\n      <header>\n        <div className=\"headerOne\">\n          <img src={`${process.env.PUBLIC_URL}/logo.png`} />\n        </div>\n        <div className=\"headerTwo\">\n          <Link to=\"/\">Search</Link>\n          <Link to=\"/favorites\">Favorites</Link>\n        </div>\n      </header>\n    );\n  }\n}\n\nexport default Header;\n","const getMusics = async (id) => {\n  const request = await fetch(`https://itunes.apple.com/lookup?id=${id}&entity=song`);\n  const requestJson = await request.json();\n  return requestJson.results;\n};\n\nexport default getMusics;\n","import React from 'react';\n\nclass Loading extends React.Component {\n  render() {\n    return (\n      <h1>Loading...</h1>\n    );\n  }\n}\n\nexport default Loading;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass MusicCard extends React.Component {\n  render() {\n    const { musics, changeFavorite, isFavorite } = this.props;\n    return (\n      musics.map((music) => (\n        <div key={ music.trackId }>\n          <p>{ music.trackName }</p>\n          <audio src={ music.previewUrl } controls>\n            <track kind=\"captions\" />\n            O seu navegador n√£o suporta o elemento\n            <code>audio</code>\n            .\n          </audio>\n          <label htmlFor={ music.trackId }>\n            Favorita\n            <input\n              type=\"checkbox\"\n              id={ music.trackId }\n              onChange={ () => changeFavorite(music, music.trackId) }\n              checked={ isFavorite(music.trackId) }\n            />\n          </label>\n        </div>\n      )));\n  }\n}\n\nMusicCard.propTypes = {\n  musics: PropTypes.arrayOf.isRequired,\n  isFavorite: PropTypes.func.isRequired,\n  changeFavorite: PropTypes.func.isRequired,\n};\n\nexport default MusicCard;\n","const FAVORITE_SONGS_KEY = 'favorite_songs';\nconst TIMEOUT = 500;\nconst SUCCESS_STATUS = 'OK';\n\nif (!JSON.parse(localStorage.getItem(FAVORITE_SONGS_KEY))) {\n  localStorage.setItem(FAVORITE_SONGS_KEY, JSON.stringify([]));\n}\nconst readFavoriteSongs = () => JSON.parse(localStorage.getItem(FAVORITE_SONGS_KEY));\n\nconst saveFavoriteSongs = (favoriteSongs) => localStorage\n  .setItem(FAVORITE_SONGS_KEY, JSON.stringify(favoriteSongs));\n\nconst simulateRequest = (response) => (callback) => {\n  setTimeout(() => {\n    callback(response);\n  }, TIMEOUT);\n};\n\nexport const getFavoriteSongs = () => new Promise((resolve) => {\n  const favoriteSongs = readFavoriteSongs();\n  simulateRequest(favoriteSongs)(resolve);\n});\n\nexport const addSong = (song) => new Promise((resolve) => {\n  if (song) {\n    const favoriteSongs = readFavoriteSongs();\n    saveFavoriteSongs([...favoriteSongs, song]);\n  }\n  simulateRequest(SUCCESS_STATUS)(resolve);\n});\n\nexport const removeSong = (song) => new Promise((resolve) => {\n  const favoriteSongs = readFavoriteSongs();\n  saveFavoriteSongs(favoriteSongs.filter((s) => s.trackId !== song.trackId));\n  simulateRequest(SUCCESS_STATUS)(resolve);\n});\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Header from '../components/Header';\nimport getMusics from '../services/musicsAPI';\nimport Loading from './Loading';\nimport MusicCard from '../components/MusicCard';\nimport { addSong, getFavoriteSongs, removeSong } from '../services/favoriteSongsAPI';\n\nclass Album extends React.Component {\n  constructor() {\n    super();\n    this.state = { musics: [], loading: true, favoriteSongs: [] };\n  }\n\n  componentDidMount() {\n    this.getFavoriteSongs();\n    this.renderMusics();\n  }\n\n  renderMusics = async () => {\n    this.setState({ loading: true },\n      async () => {\n        const { match } = this.props;\n        const { id } = match.params;\n        const data = await getMusics(id);\n        this.setState({ musics: [...data], loading: false });\n      });\n  }\n\n  getFavoriteSongs = async () => {\n    this.setState({ loading: true },\n      async () => {\n        const data = await getFavoriteSongs();\n        this.setState({ favoriteSongs: [...data], loading: false });\n      });\n  }\n\n  addFavoriteSong = async (song) => {\n    this.setState({ loading: true },\n      async () => {\n        await addSong(song);\n        this.setState({ loading: false });\n      });\n  }\n\n  removeFavoriteSong = async (song) => {\n    this.setState({ loading: true },\n      async () => {\n        await removeSong(song);\n        this.setState({ loading: false });\n      });\n  }\n\n  isFavorite = (trackId) => {\n    const { favoriteSongs } = this.state;\n    if (favoriteSongs.length === 0) return false;\n    return favoriteSongs\n      .map((song) => song.trackId)\n      .includes(trackId);\n  }\n\n  changeFavorite = (song, trackID) => {\n    if (this.isFavorite(trackID)) {\n      this.removeFavoriteSong(song);\n      this.getFavoriteSongs();\n    }\n    if (!this.isFavorite(trackID)) {\n      this.addFavoriteSong(song);\n      this.getFavoriteSongs();\n    }\n  }\n\n  render() {\n    const { musics, loading } = this.state;\n    return (\n      <main>\n        <Header />\n        { loading && <Loading /> }\n        { !loading\n          && (\n            <div>\n              <h2>{ musics[0].artistName }</h2>\n              <h2>{ musics[0].collectionName }</h2>\n              <MusicCard\n                musics={ musics.slice(1) }\n                changeFavorite={ this.changeFavorite }\n                isFavorite={ this.isFavorite }\n              />\n            </div>\n          )}\n      </main>\n    );\n  }\n}\n\nAlbum.propTypes = {\n  match: PropTypes.arrayOf.isRequired,\n};\n\nexport default Album;\n","import React from 'react';\nimport Header from '../components/Header';\nimport Loading from './Loading';\nimport MusicCard from '../components/MusicCard';\nimport { addSong, getFavoriteSongs, removeSong } from '../services/favoriteSongsAPI';\n\nclass Favorites extends React.Component {\n  constructor() {\n    super();\n    this.state = { loading: true, favoriteSongs: [] };\n  }\n\n  componentDidMount() {\n    this.getFavoriteSongs();\n  }\n\n  getFavoriteSongs = async () => {\n    this.setState({ loading: true },\n      async () => {\n        const data = await getFavoriteSongs();\n        this.setState({ favoriteSongs: [...data], loading: false });\n      });\n  }\n\n  addFavoriteSong = async (song) => {\n    this.setState({ loading: true },\n      async () => {\n        await addSong(song);\n        this.setState({ loading: false });\n      });\n  }\n\n  removeFavoriteSong = async (song) => {\n    this.setState({ loading: true },\n      async () => {\n        await removeSong(song);\n        this.setState({ loading: false });\n      });\n  }\n\n  isFavorite = (trackId) => {\n    const { favoriteSongs } = this.state;\n    if (favoriteSongs.length === 0) return false;\n    return favoriteSongs\n      .map((song) => song.trackId)\n      .includes(trackId);\n  }\n\n  changeFavorite = (song, trackID) => {\n    if (this.isFavorite(trackID)) {\n      this.removeFavoriteSong(song);\n      this.getFavoriteSongs();\n    }\n    if (!this.isFavorite(trackID)) {\n      this.addFavoriteSong(song);\n      this.getFavoriteSongs();\n    }\n  }\n\n  render() {\n    const { favoriteSongs, loading } = this.state;\n    return (\n      <main>\n        <Header />\n        { loading && <Loading /> }\n        { !loading\n          && (\n            <div>\n              <MusicCard\n                musics={ favoriteSongs }\n                changeFavorite={ this.changeFavorite }\n                isFavorite={ this.isFavorite }\n              />\n            </div>\n          )}\n      </main>\n    );\n  }\n}\n\nexport default Favorites;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Header from '../components/Header';\nimport Loading from './Loading';\n\n\nclass Search extends React.Component {\n  render() {\n    const {\n      handlechange,\n      value,\n      btnSearchAlbums,\n      searchResults,\n      loading,\n      renderAlbums,\n    } = this.props;\n\n    return (\n      <main>\n        <Header />\n        <div>\n          <input\n            className=\"searchBox\"\n            type=\"text\"\n            name=\"artistSearch\"\n            placeholder='Artist Name'\n            onChange={ handlechange }\n            value={ value }\n          />\n          <button\n            className=\"searchBtn\"\n            type=\"submit\"\n            onClick={ btnSearchAlbums }\n          >\n            Pesquisar\n          </button>\n        </div>\n        <div>\n          { loading && <Loading />}\n          { searchResults && renderAlbums() }\n        </div>\n      </main>\n    );\n  }\n}\n\nSearch.propTypes = {\n  handlechange: PropTypes.func.isRequired,\n  btnSearchAlbums: PropTypes.func.isRequired,\n  value: PropTypes.string.isRequired,\n  btnDisabled: PropTypes.bool.isRequired,\n  searchResults: PropTypes.bool.isRequired,\n  loading: PropTypes.bool.isRequired,\n  renderAlbums: PropTypes.func.isRequired,\n};\n\nexport default Search;\n","const searchAlbumsAPI = async (artist) => {\n  const artistNameURL = encodeURI(artist).replaceAll('%20', '+');\n\n  const getAlbumsAPI = `https://itunes.apple.com/search?entity=album&term=${artistNameURL}&attribute=allArtistTerm`;\n\n  const APIResponse = await fetch(getAlbumsAPI);\n\n  const { results } = await APIResponse.json();\n\n  const response = results.map(\n    ({\n      artistId,\n      artistName,\n      collectionId,\n      collectionName,\n      collectionPrice,\n      artworkUrl100,\n      releaseDate,\n      trackCount,\n    }) => ({\n      artistId,\n      artistName,\n      collectionId,\n      collectionName,\n      collectionPrice,\n      artworkUrl100,\n      releaseDate,\n      trackCount,\n    }),\n  );\n  return response;\n};\n\nexport default searchAlbumsAPI;\n","import React from 'react';\nimport { Switch, Route, Link } from 'react-router-dom';\nimport Album from './pages/Album';\nimport Favorites from './pages/Favorites';\nimport Search from './pages/Search';\nimport searchAlbumsAPI from './services/searchAlbumsAPI';\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      loading: false,\n      searchResults: false,\n      artistSearch: '',\n      artistSearched: '',\n      albumsResult: [],\n    };\n  }\n\n  handleChange = ({ target }) => {\n    const { value, name } = target;\n    this.setState({ [name]: value });\n  }\n\n  btnSearchAlbums = async () => {\n    const { artistSearch } = this.state;\n    this.setState({ loading: true, artistSearch: '', searchResults: false },\n      async () => {\n        const albums = await searchAlbumsAPI(artistSearch);\n        console.log(albums);\n        this.setState({\n          loading: false,\n          albumsResult: [...albums],\n          searchResults: true,\n          artistSearched: artistSearch,\n        });\n      });\n  }\n\n  renderAlbums = () => {\n    const { artistSearched, albumsResult } = this.state;\n    if (albumsResult.length === 0) {\n      return <h1>No albums were found</h1>;\n    } return (\n      <section className=\"search-results\">\n        <h2>\n          { `Album search for ${artistSearched}:` }\n        </h2>\n        <div className='albums'>\n        {albumsResult.map((album) => {\n          const {\n            artistName,\n            collectionId,\n            artworkUrl100,\n            collectionName,\n          } = album;\n          return (\n            <div key={ collectionId } className=\"album\">\n              <Link to={ `/album/${collectionId}` }>\n                <img src={ artworkUrl100.replace('100x100bb.jpg', '300x300bb.jpg') } alt={ collectionName } />\n              </Link>\n              <h3>{ artistName }</h3>\n              <p>{ collectionName }</p>\n            </div>\n          );\n        }) }\n        </div>\n      </section>\n    );\n  };\n\n  render() {\n    const {\n      loading,\n      artistSearch,\n      searchResults,\n      albumsResult,\n    } = this.state;\n    return (\n      <main>\n      <Switch>\n      <Route path=\"/album/:id\" component={ Album } />\n      <Route path=\"/favorites\" component={ Favorites } />\n      <Route\n        path=\"/\"\n        render={ (props) => (\n          <Search\n            { ...props }\n            handlechange={ this.handleChange }\n            value={ artistSearch }\n            btnSearchAlbums={ this.btnSearchAlbums }\n            searchResults={ searchResults }\n            albumsResult={ albumsResult }\n            loading={ loading }\n            renderAlbums={ this.renderAlbums }\n          />) }\n      />\n      </Switch>\n      </main>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}
{"version":3,"sources":["components/Header.js","services/musicsAPI.js","pages/Loading.js","components/MusicCard.js","services/favoriteSongsAPI.js","pages/Album.js","pages/Favorites.js","pages/Search.js","services/searchAlbumsAPI.js","App.jsx","index.js"],"names":["Header","className","src","process","to","React","Component","getMusics","id","a","fetch","request","json","requestJson","results","Loading","MusicCard","this","props","musics","changeFavorite","isFavorite","map","music","trackName","previewUrl","controls","kind","htmlFor","trackId","type","onChange","checked","FAVORITE_SONGS_KEY","readFavoriteSongs","JSON","parse","localStorage","getItem","saveFavoriteSongs","favoriteSongs","setItem","stringify","getFavoriteSongs","addSong","song","removeSong","filter","s","Album","renderMusics","setState","loading","match","params","data","getSavedMusic","state","length","includes","trackID","artistName","collectionName","slice","Favorites","addFavoriteSong","removeFavoriteSong","Search","handlechange","value","btnSearchAlbums","searchResults","renderAlbums","name","placeholder","onClick","searchAlbumsAPI","artist","artistNameURL","encodeURI","replaceAll","getAlbumsAPI","APIResponse","response","artistId","collectionId","collectionPrice","artworkUrl100","releaseDate","trackCount","App","handleChange","target","artistSearch","albums","console","log","albumsResult","artistSearched","album","replace","alt","path","component","render","ReactDOM","StrictMode","basename","document","getElementById"],"mappings":"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","file":"static/js/main.e7f8f656.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\n\n\nclass Header extends React.Component {\n  render() {\n    return (\n      <header>\n        <div className=\"headerOne\">\n          <img src={`${process.env.PUBLIC_URL}/logo.png`} />\n        </div>\n        <div className=\"headerTwo\">\n          <Link to=\"/\">Search</Link>\n          <Link to=\"/favorites\">Favorites</Link>\n        </div>\n      </header>\n    );\n  }\n}\n\nexport default Header;\n","const getMusics = async (id) => {\n  const request = await fetch(`https://itunes.apple.com/lookup?id=${id}&entity=song`);\n  const requestJson = await request.json();\n  return requestJson.results;\n};\n\nexport default getMusics;\n","import React from 'react';\n\nclass Loading extends React.Component {\n  render() {\n    return (\n      <h1>Loading...</h1>\n    );\n  }\n}\n\nexport default Loading;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass MusicCard extends React.Component {\n  render() {\n    const { musics, changeFavorite, isFavorite } = this.props;\n    return (\n      musics.map((music) => (\n        <div key={ music.trackId }>\n          <p>{ music.trackName }</p>\n          <audio src={ music.previewUrl } controls>\n            <track kind=\"captions\" />\n            O seu navegador n√£o suporta o elemento\n            <code>audio</code>\n            .\n          </audio>\n          <label htmlFor={ music.trackId }>\n            Favorita\n            <input\n              type=\"checkbox\"\n              id={ music.trackId }\n              onChange={ () => changeFavorite(music, music.trackId) }\n              checked={ isFavorite(music.trackId) }\n            />\n          </label>\n        </div>\n      )));\n  }\n}\n\nMusicCard.propTypes = {\n  musics: PropTypes.arrayOf.isRequired,\n  isFavorite: PropTypes.func.isRequired,\n  changeFavorite: PropTypes.func.isRequired,\n};\n\nexport default MusicCard;\n","const FAVORITE_SONGS_KEY = 'favorite_songs';\n\nconst readFavoriteSongs = () => JSON.parse(localStorage.getItem(FAVORITE_SONGS_KEY));\n\nconst saveFavoriteSongs = (favoriteSongs) => localStorage\n  .setItem(FAVORITE_SONGS_KEY, JSON.stringify(favoriteSongs));\n\nexport const getFavoriteSongs = () => {\n  const favoriteSongs = readFavoriteSongs();\n  return favoriteSongs;\n};\n\nexport const addSong = (song) => {\n  if (song) {\n    const favoriteSongs = readFavoriteSongs();\n    saveFavoriteSongs([...favoriteSongs, song]);\n  }\n};\n\nexport const removeSong = (song) => {\n  const favoriteSongs = readFavoriteSongs();\n  saveFavoriteSongs(favoriteSongs.filter((s) => s.trackId !== song.trackId));\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Header from '../components/Header';\nimport getMusics from '../services/musicsAPI';\nimport Loading from './Loading';\nimport MusicCard from '../components/MusicCard';\nimport { addSong, getFavoriteSongs, removeSong } from '../services/favoriteSongsAPI';\n\nclass Album extends React.Component {\n  constructor() {\n    super();\n    this.state = { musics: [], loading: true, favoriteSongs: [] };\n  }\n\n  componentDidMount() {\n    this.getSavedMusic();\n    this.renderMusics();\n  }\n\n  renderMusics = () => {\n    this.setState({ loading: true },\n      async () => {\n        const { match } = this.props;\n        const { id } = match.params;\n        const data = await getMusics(id);\n        this.setState({ musics: [...data], loading: false });\n      });\n  }\n\n  getSavedMusic = () => {\n        const data = getFavoriteSongs();\n        this.setState({ favoriteSongs: [...data] });;\n  }\n\n  isFavorite = (trackId) => {\n    const { favoriteSongs } = this.state;\n    if (favoriteSongs.length === 0) return false;\n    return favoriteSongs\n      .map((song) => song.trackId)\n      .includes(trackId);\n  }\n\n  changeFavorite = (song, trackID) => {\n    if (this.isFavorite(trackID)) {\n      removeSong(song);\n      this.getSavedMusic();\n    }\n    if (!this.isFavorite(trackID)) {\n      addSong(song);\n      this.getSavedMusic();\n    }\n  }\n\n  render() {\n    const { musics, loading } = this.state;\n    return (\n      <main>\n        <Header />\n        { loading && <Loading /> }\n        { !loading\n          && (\n            <div>\n              <h2>{ musics[0].artistName }</h2>\n              <h2>{ musics[0].collectionName }</h2>\n              <MusicCard\n                musics={ musics.slice(1) }\n                changeFavorite={ this.changeFavorite }\n                isFavorite={ this.isFavorite }\n              />\n            </div>\n          )}\n      </main>\n    );\n  }\n}\n\nAlbum.propTypes = {\n  match: PropTypes.arrayOf.isRequired,\n};\n\nexport default Album;\n","import React from 'react';\nimport Header from '../components/Header';\nimport Loading from './Loading';\nimport MusicCard from '../components/MusicCard';\nimport { addSong, getFavoriteSongs, removeSong } from '../services/favoriteSongsAPI';\n\nclass Favorites extends React.Component {\n  constructor() {\n    super();\n    this.state = { loading: true, favoriteSongs: [] };\n  }\n\n  componentDidMount() {\n    this.getFavoriteSongs();\n  }\n\n  getFavoriteSongs = async () => {\n    this.setState({ loading: true },\n      async () => {\n        const data = await getFavoriteSongs();\n        this.setState({ favoriteSongs: [...data], loading: false });\n      });\n  }\n\n  addFavoriteSong = async (song) => {\n    this.setState({ loading: true },\n      async () => {\n        await addSong(song);\n        this.setState({ loading: false });\n      });\n  }\n\n  removeFavoriteSong = async (song) => {\n    this.setState({ loading: true },\n      async () => {\n        await removeSong(song);\n        this.setState({ loading: false });\n      });\n  }\n\n  isFavorite = (trackId) => {\n    const { favoriteSongs } = this.state;\n    if (favoriteSongs.length === 0) return false;\n    return favoriteSongs\n      .map((song) => song.trackId)\n      .includes(trackId);\n  }\n\n  changeFavorite = (song, trackID) => {\n    if (this.isFavorite(trackID)) {\n      this.removeFavoriteSong(song);\n      this.getFavoriteSongs();\n    }\n    if (!this.isFavorite(trackID)) {\n      this.addFavoriteSong(song);\n      this.getFavoriteSongs();\n    }\n  }\n\n  render() {\n    const { favoriteSongs, loading } = this.state;\n    return (\n      <main>\n        <Header />\n        { loading && <Loading /> }\n        { !loading\n          && (\n            <div>\n              <MusicCard\n                musics={ favoriteSongs }\n                changeFavorite={ this.changeFavorite }\n                isFavorite={ this.isFavorite }\n              />\n            </div>\n          )}\n      </main>\n    );\n  }\n}\n\nexport default Favorites;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Header from '../components/Header';\nimport Loading from './Loading';\n\n\nclass Search extends React.Component {\n  render() {\n    const {\n      handlechange,\n      value,\n      btnSearchAlbums,\n      searchResults,\n      loading,\n      renderAlbums,\n    } = this.props;\n\n    return (\n      <main>\n        <Header />\n        <div>\n          <input\n            className=\"searchBox\"\n            type=\"text\"\n            name=\"artistSearch\"\n            placeholder='Artist Name'\n            onChange={ handlechange }\n            value={ value }\n          />\n          <button\n            className=\"searchBtn\"\n            type=\"submit\"\n            onClick={ btnSearchAlbums }\n          >\n            Pesquisar\n          </button>\n        </div>\n        <div>\n          { loading && <Loading />}\n          { searchResults && renderAlbums() }\n        </div>\n      </main>\n    );\n  }\n}\n\nSearch.propTypes = {\n  handlechange: PropTypes.func.isRequired,\n  btnSearchAlbums: PropTypes.func.isRequired,\n  value: PropTypes.string.isRequired,\n  btnDisabled: PropTypes.bool.isRequired,\n  searchResults: PropTypes.bool.isRequired,\n  loading: PropTypes.bool.isRequired,\n  renderAlbums: PropTypes.func.isRequired,\n};\n\nexport default Search;\n","const searchAlbumsAPI = async (artist) => {\n  const artistNameURL = encodeURI(artist).replaceAll('%20', '+');\n\n  const getAlbumsAPI = `https://itunes.apple.com/search?entity=album&term=${artistNameURL}&attribute=allArtistTerm`;\n\n  const APIResponse = await fetch(getAlbumsAPI);\n\n  const { results } = await APIResponse.json();\n\n  const response = results.map(\n    ({\n      artistId,\n      artistName,\n      collectionId,\n      collectionName,\n      collectionPrice,\n      artworkUrl100,\n      releaseDate,\n      trackCount,\n    }) => ({\n      artistId,\n      artistName,\n      collectionId,\n      collectionName,\n      collectionPrice,\n      artworkUrl100,\n      releaseDate,\n      trackCount,\n    }),\n  );\n  return response;\n};\n\nexport default searchAlbumsAPI;\n","import React from 'react';\nimport { Switch, Route, Link } from 'react-router-dom';\nimport Album from './pages/Album';\nimport Favorites from './pages/Favorites';\nimport Search from './pages/Search';\nimport searchAlbumsAPI from './services/searchAlbumsAPI';\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      loading: false,\n      searchResults: false,\n      artistSearch: '',\n      artistSearched: '',\n      albumsResult: [],\n    };\n  }\n\n  handleChange = ({ target }) => {\n    const { value, name } = target;\n    this.setState({ [name]: value });\n  }\n\n  btnSearchAlbums = async () => {\n    const { artistSearch } = this.state;\n    this.setState({ loading: true, artistSearch: '', searchResults: false },\n      async () => {\n        const albums = await searchAlbumsAPI(artistSearch);\n        console.log(albums);\n        this.setState({\n          loading: false,\n          albumsResult: [...albums],\n          searchResults: true,\n          artistSearched: artistSearch,\n        });\n      });\n  }\n\n  renderAlbums = () => {\n    const { artistSearched, albumsResult } = this.state;\n    if (albumsResult.length === 0) {\n      return <h1>No albums were found</h1>;\n    } return (\n      <section className=\"search-results\">\n        <h2>\n          { `Album search for ${artistSearched}:` }\n        </h2>\n        <div className='albums'>\n        {albumsResult.map((album) => {\n          const {\n            artistName,\n            collectionId,\n            artworkUrl100,\n            collectionName,\n          } = album;\n          return (\n            <div key={ collectionId } className=\"album\">\n              <Link to={ `/album/${collectionId}` }>\n                <img src={ artworkUrl100.replace('100x100bb.jpg', '300x300bb.jpg') } alt={ collectionName } />\n              </Link>\n              <h3>{ artistName }</h3>\n              <p>{ collectionName }</p>\n            </div>\n          );\n        }) }\n        </div>\n      </section>\n    );\n  };\n\n  render() {\n    const {\n      loading,\n      artistSearch,\n      searchResults,\n      albumsResult,\n    } = this.state;\n    return (\n      <main>\n      <Switch>\n      <Route path=\"/album/:id\" component={ Album } />\n      <Route path=\"/favorites\" component={ Favorites } />\n      <Route\n        path=\"/\"\n        render={ (props) => (\n          <Search\n            { ...props }\n            handlechange={ this.handleChange }\n            value={ artistSearch }\n            btnSearchAlbums={ this.btnSearchAlbums }\n            searchResults={ searchResults }\n            albumsResult={ albumsResult }\n            loading={ loading }\n            renderAlbums={ this.renderAlbums }\n          />) }\n      />\n      </Switch>\n      </main>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}